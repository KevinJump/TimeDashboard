{"version":3,"file":"assets.js","sources":["D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/dashboards/manifest.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/context/manifest.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/section/manifest.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/sidebar/manifest.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/workspace/manifest.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/documents/manifest.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/header/manifest.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/lang/manifest.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/actions/workspace/time.action.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/actions/workspace/manifest.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/actions/entity/time.entity.action.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/actions/entity/manifest.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/editor/manifest.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/dialogs/manifests.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/api/core/ApiError.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/api/core/CancelablePromise.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/api/core/OpenAPI.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/api/core/request.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/api/services/TimeResource.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/index.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/repository/sources/time.datasource.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/repository/time.repository.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/context/time.context.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/dashboards/dashboard.element.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/sidebar/nested-menu.element.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/workspace/context.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/workspace/workspace.element.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/workspace/views/defaultWorkspace.element.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/workspace/views/settingsWorkspace.element.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/dialogs/custom-modal-token.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/workspace/views/dialogworkspace.element.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/documents/views/time-workspace-view.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/header/time-header-element.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/header/time-header-modal.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/lang/files/en-us.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/editor/styledtext.ui.element.ts","D:/Source-Alt/Experiments/v14/TimeDashboard/TimeDashboard.Client/assets/src/dialogs/custom-modal-element.ts"],"sourcesContent":["import type { ManifestDashboard } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst dashboards: Array<ManifestDashboard> = [\r\n    {\r\n        type: 'dashboard',\r\n        name: 'timedashboard',\r\n        alias: 'timedashboard.dashboard',\r\n        elementName: 'timedashboard-dashboard',\r\n        js: () => import(\"./dashboard.element.js\"),\r\n        weight: -10,\r\n        meta: {\r\n            label: 'TimeDashboard',\r\n            pathname: 'timedashboard'\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: 'Umb.Condition.SectionAlias',\r\n                match: 'time.section'\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport const manifests = [...dashboards];","import { ManifestGlobalContext } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst contexts : Array<ManifestGlobalContext> = [\r\n    {\r\n        type: 'globalContext',\r\n        alias: 'time.context',\r\n        name: 'Time context',\r\n        js: () => import('./time.context.ts')\r\n    }\r\n]\r\n\r\nexport const manifests = [...contexts];","import { ManifestSection } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\n\r\nconst sectionManifest : ManifestSection = {\r\n    type: 'section',\r\n    alias: 'time.section',\r\n    name: 'time section',\r\n    weight: 10,\r\n    meta: {\r\n        label: 'Time',\r\n        pathname: 'time'\r\n    }\r\n}\r\n\r\nexport const manifests = [sectionManifest];","import { ManifestElement } from \"@umbraco-cms/backoffice/extension-api\";\r\nimport { ManifestMenu, ManifestMenuItem, ManifestSectionSidebarApp, MetaMenuItem, UmbMenuItemElement } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst sidebarAppManifest : ManifestSectionSidebarApp = {\r\n    type: 'sectionSidebarApp',\r\n    kind: 'menuWithEntityActions',\r\n    alias: 'time.sidebar.app',\r\n    name: 'Sidebar app',\r\n    meta: {\r\n        label: \"Time\",\r\n        menu: \"time.nested.menu\"\r\n       \r\n    },\r\n    conditions: [\r\n        {\r\n            alias: \"Umb.Condition.SectionAlias\",\r\n            match: \"time.section\"\r\n        }\r\n    ]\r\n};\r\n\r\nconst menuManifest: ManifestMenu = {\r\n    type: 'menu',\r\n    alias: 'time.menu',\r\n    name: 'time sidebar menu',\r\n    meta: {\r\n        label: 'time'\r\n    }\r\n}\r\n\r\nconst menuItemManifest: ManifestMenuItem = {\r\n    type: 'menuItem',\r\n    alias: 'time.menu.item',\r\n    name: 'time menu item',\r\n    meta: {\r\n        label: 'Time zones',\r\n        icon: 'icon-alarm-clock',\r\n        entityType: 'time-workspace',\r\n        menus: [\r\n            'time.menu'\r\n        ]\r\n    },\r\n    element: ()=> import('./nested-menu.element.js')\r\n}\r\n\r\n/**** nested menu items ****/\r\n\r\nexport interface ManifestTimeMenuItem extends ManifestElement<UmbMenuItemElement> {\r\n    type: 'time-menu-item';\r\n    meta: MetaMenuItem;\r\n}\r\n\r\n\r\nconst nestedMenuManifest : ManifestMenu = {\r\n    type: 'menu',\r\n    alias: 'time.nested.menu',\r\n    name: 'Nested menu',\r\n    element: () => import('./nested-menu.element.js'),\r\n    meta: {\r\n        label: 'Time zones',\r\n        icon: 'icon-alarm-clock',\r\n        entityType: 'time-workspace',\r\n    }\r\n}\r\n\r\nconst nestedMenuItems: ManifestTimeMenuItem[] = [\r\n    {\r\n        type: 'time-menu-item',\r\n        alias: 'time.nested.menu.child-one',\r\n        name: 'child item',\r\n        weight: 200,\r\n        meta: {\r\n            menus: [nestedMenuManifest.alias],\r\n            icon: 'icon-alarm-clock',\r\n            label: 'child item 1',\r\n            entityType: 'time-workspace',\r\n        }\r\n    },\r\n    {\r\n        type: 'time-menu-item',\r\n        alias: 'time.nested.menu.child-two',\r\n        name: 'child item two',\r\n        weight: 200,\r\n        meta: {\r\n            menus: [nestedMenuManifest.alias],\r\n            icon: 'icon-alarm-clock',\r\n            label: 'child item 2',\r\n            entityType: 'time-workspace',\r\n        }\r\n    }\r\n];\r\n\r\nexport const manifests = [\r\n    sidebarAppManifest,\r\n    menuManifest,\r\n    menuItemManifest,\r\n    nestedMenuManifest,\r\n    ...nestedMenuItems,\r\n];","import { ManifestModal, ManifestWorkspace, ManifestWorkspaceAction, ManifestWorkspaceContext, ManifestWorkspaceView } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nvar workspace : ManifestWorkspace = {\r\n    type: 'workspace',\r\n    alias: 'time.workspace',\r\n    name: 'time workspace',\r\n    js: ()=> import('./workspace.element'),   \r\n    meta: {\r\n        entityType: 'time-workspace'\r\n    }\r\n};\r\n\r\nvar workspaceViews : Array<ManifestWorkspaceView> = [\r\n    {\r\n        type: 'workspaceView',\r\n        alias: 'time.workspace.default',\r\n        name: 'default view',\r\n        js: () => import('./views/defaultWorkspace.element.js'),\r\n        weight: 300,\r\n        meta: {\r\n           icon: 'icon-alarm-clock',\r\n           pathname: 'overview',\r\n           label: 'time'\r\n        },\r\n        conditions: [\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n\t\t\t\tmatch: workspace.alias\r\n\t\t\t},\r\n\t\t],    \r\n    },\r\n    {\r\n        type: 'workspaceView',\r\n        alias: 'time.workspace.settings',\r\n        name: 'setting view',\r\n        js: ()=> import('./views/settingsWorkspace.element.js'),\r\n        weight: 200,\r\n        meta: {\r\n            icon: 'icon-settings',\r\n            pathname: 'settings',\r\n            label: 'settings'\r\n        },\r\n        conditions: [\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n\t\t\t\tmatch: workspace.alias\r\n\t\t\t},\r\n\t\t],\r\n    },\r\n    {\r\n        type: \"workspaceView\",\r\n        alias: 'time.workspace.dialogs',\r\n        name: 'dialogs',\r\n        js: ()=> import('./views/dialogworkspace.element.js'),\r\n        weight: 50,\r\n        meta: {\r\n            icon: 'icon-app',\r\n            pathname: 'dialogs',\r\n            label: 'Dialogs'\r\n        },\r\n        conditions: [\r\n            {\r\n\t\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n\t\t\t\tmatch: workspace.alias\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n\r\nconst context : ManifestWorkspaceContext = {\r\n    type: 'workspaceContext',\r\n    alias: 'time.workspace.context',\r\n    name: 'time workspace context',\r\n    js: ()=> import('./context.js'),\r\n}\r\n\r\nconst workspaceActions: Array<ManifestWorkspaceAction> = [];\r\n\r\nconst workspaceModals : Array<ManifestModal> = [];\r\n\r\nexport const manifests = [\r\n    context, \r\n    workspace, \r\n    ...workspaceViews, \r\n    ...workspaceActions, \r\n    ...workspaceModals];","import { ManifestWorkspaceView } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\n\r\nvar workspaceView : ManifestWorkspaceView = {\r\n    type: 'workspaceView',\r\n    alias: 'time.document.workspace',\r\n    name: 'time contentapp',\r\n    js: () => import('./views/time-workspace-view.js'),\r\n    weight: 10,\r\n    meta: {\r\n        icon: 'icon-alarm-clock',\r\n        pathname: 'time',\r\n        label: 'time'\r\n    },\r\n    conditions: [\r\n        {\r\n            alias: 'Umb.Condition.WorkspaceAlias',\r\n            match: 'Umb.Workspace.Document'\r\n        },\r\n    ],    \r\n}\r\n\r\nexport const manifests = [workspaceView];","import { ManifestHeaderApp, ManifestModal } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst header : ManifestHeaderApp = {\r\n\r\n    type: 'headerApp',\r\n    alias: 'time.header.app',   \r\n    name: 'time app',\r\n    js: () => import('./time-header-element.js'),\r\n    weight: 850,\r\n    meta: {\r\n        label: 'time',\r\n        icon: 'icon-alarm-clock',\r\n        pathname: 'time'\r\n    }\r\n};\r\n\r\nconst modal: ManifestModal = {\r\n    type: 'modal',\r\n    alias: 'time.header.modal',\r\n    name: 'time header modal',\r\n    js: () => import('./time-header-modal.js'),\r\n}\r\n\r\nexport const manifests = [header, modal];","import { ManifestLocalization, ManifestTypes } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst localizations: Array<ManifestLocalization> = [\r\n    {\r\n        type: 'localization',\r\n        alias: 'time.lang.enus',\r\n        name: 'English (US)',\r\n        weight: 0,\r\n        meta: {\r\n            culture: 'en-us'\r\n        },\r\n        js: () => import('./files/en-us')\r\n    },\r\n    {\r\n        type: 'localization',\r\n        alias: 'time.lang.engb',\r\n        name: 'English (UK)',\r\n        weight: 0,\r\n        meta: {\r\n            culture: 'en-gb'\r\n        },\r\n        js: () => import('./files/en-us')\r\n    },\r\n\r\n]\r\n\r\n\r\nexport const manifests: Array<ManifestTypes> = [...localizations];\r\n\r\n","\r\nimport { UmbWorkspaceActionArgs, UmbWorkspaceActionBase } from \"@umbraco-cms/backoffice/workspace\";\r\nimport { UmbDocumentWorkspaceContext } from \"@umbraco-cms/backoffice/document\";\r\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UMB_NOTIFICATION_CONTEXT, UmbNotificationContext } from \"@umbraco-cms/backoffice/notification\";\r\n\r\nexport class TimeAction extends UmbWorkspaceActionBase<UmbDocumentWorkspaceContext> {\r\n\r\n    #notificationContext? : UmbNotificationContext;\r\n\r\n    constructor(host: UmbControllerHost, args: UmbWorkspaceActionArgs<UmbDocumentWorkspaceContext>) {\r\n        super(host, args);\r\n\r\n        this.consumeContext(UMB_NOTIFICATION_CONTEXT, (instance) => {\r\n            this.#notificationContext = instance;\r\n        })\r\n    }\r\n\r\n    async execute(): Promise<void> {\r\n        console.log('action execute');\r\n    \r\n        // open a sidebar \r\n        // open a dialog\r\n        // do something funcky \r\n\r\n        this.#notificationContext?.peek('warning', {\r\n            data: {\r\n                headline: 'A thing has happened !',\r\n                message: 'What that thing is? only time will tell.'\r\n            }\r\n        } )\r\n        \r\n    }\r\n}","import { ManifestWorkspaceAction } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { TimeAction } from \"./time.action\";\r\n\r\nconst action : ManifestWorkspaceAction = {\r\n    type: 'workspaceAction',\r\n    alias: 'time.workspace.action',\r\n    name: 'time workspace action',\r\n    api: TimeAction,\r\n    meta: {\r\n        label: 'Time Action',\r\n        look: 'primary',\r\n        color: 'default',\r\n    },\r\n    conditions: [\r\n        {\r\n            alias: 'Umb.Condition.WorkspaceAlias',\r\n            match: 'Umb.Workspace.Document'\r\n        }\r\n    ]\r\n}\r\n\r\nexport const manifests = [action];","import { UmbControllerHostElement } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UmbDocumentItemRepository } from \"@umbraco-cms/backoffice/document\";\r\nimport { UmbEntityActionArgs, UmbEntityActionBase } from \"@umbraco-cms/backoffice/entity-action\";\r\nimport { UMB_NOTIFICATION_CONTEXT, UmbNotificationContext } from \"@umbraco-cms/backoffice/notification\";\r\n\r\nexport class TimeEntityAction extends UmbEntityActionBase<UmbDocumentItemRepository> {\r\n    #notificationContext? : UmbNotificationContext;\r\n\r\n    constructor(host: UmbControllerHostElement, args: UmbEntityActionArgs<UmbDocumentItemRepository>)\r\n    {\r\n        super(host, args)\r\n\r\n        this.consumeContext(UMB_NOTIFICATION_CONTEXT, (instance) => {\r\n            this.#notificationContext = instance;\r\n        });\r\n    }\r\n    \r\n    async execute() {\r\n        this.#notificationContext?.peek('warning', {\r\n            data: {\r\n                headline: 'A thing has happened !',\r\n                message: 'What that thing is? only time will tell.'\r\n            }\r\n        });\r\n    }\r\n\r\n}","import { UMB_DOCUMENT_ENTITY_TYPE, UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS } from \"@umbraco-cms/backoffice/document\";\r\nimport { ManifestEntityAction } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { TimeEntityAction } from \"./time.entity.action\";\r\n\r\nconst entityAction: ManifestEntityAction = {\r\n    type: 'entityAction',\r\n    alias: 'time.entity.action',\r\n    name: 'tell me the time action',\r\n    weight: -100,\r\n    forEntityTypes: [\r\n        UMB_DOCUMENT_ENTITY_TYPE\r\n    ],\r\n    api: TimeEntityAction,\r\n    meta: {\r\n        icon: 'icon-alarm-clock',\r\n        label: 'time action',\r\n        repositoryAlias: UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS,\r\n    }\r\n}\r\n\r\nexport const manifests = [entityAction];\r\n\r\n\r\n    \r\n","import { ManifestPropertyEditorUi } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { ManifestPropertyEditorSchema } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nexport const styledTextSchema : ManifestPropertyEditorSchema = {\r\n    type: 'propertyEditorSchema',\r\n    name: 'Styled textbox',\r\n    alias: 'styled.textbox',\r\n    meta: {\r\n        defaultPropertyEditorUiAlias: 'styled.textbox.ui',\r\n        settings: {\r\n            properties: [\r\n                {\r\n                    alias: 'styleValue',\r\n                    label: 'Styles',\r\n                    description: 'Styles to apply to the box',\r\n                    propertyEditorUiAlias: 'Umb.PropertyEditorUi.TextArea'\r\n                }\r\n            ],\r\n            defaultData: [\r\n                {\r\n                    alias: 'styleValue',\r\n                    value: 'font-size: 20px;\\r\\nborder:none; border-bottom: 1px solid #444;'\r\n                }\r\n            ]\r\n        }\r\n    }\r\n};\r\n\r\nconst styledTextUi : ManifestPropertyEditorUi = {\r\n    type: 'propertyEditorUi',\r\n    alias: 'styled.textbox.ui',\r\n    name: 'styled textbox',\r\n    js: () => import('./styledtext.ui.element.js'),\r\n    elementName: 'styled-text',\r\n    meta: {\r\n        label: 'Styled textbox',\r\n        icon: 'icon-brush',\r\n        group: 'common',\r\n        propertyEditorSchemaAlias: 'styled.textbox',        \r\n    }\r\n}\r\n\r\nexport const manifests = [styledTextSchema, styledTextUi];","import { ManifestModal } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst modals: Array<ManifestModal> = [\r\n    {\r\n        type: 'modal',\r\n        alias: 'time.custom.modal',\r\n        name: 'Time custom modal',\r\n        js: () => import('./custom-modal-element.js')\r\n    }\r\n];\r\n\r\nexport const manifests = [...modals];","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n    public readonly url: string;\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly body: any;\n    public readonly request: ApiRequestOptions;\n\n    constructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n        super(message);\n\n        this.name = 'ApiError';\n        this.url = response.url;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.body = response.body;\n        this.request = request;\n    }\n}\r\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n    constructor(message: string) {\n        super(message);\n        this.name = 'CancelError';\n    }\n\n    public get isCancelled(): boolean {\n        return true;\n    }\n}\n\nexport interface OnCancel {\n    readonly isResolved: boolean;\n    readonly isRejected: boolean;\n    readonly isCancelled: boolean;\n\n    (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n    #isResolved: boolean;\n    #isRejected: boolean;\n    #isCancelled: boolean;\n    readonly #cancelHandlers: (() => void)[];\n    readonly #promise: Promise<T>;\n    #resolve?: (value: T | PromiseLike<T>) => void;\n    #reject?: (reason?: any) => void;\n\n    constructor(\n        executor: (\n            resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void,\n            onCancel: OnCancel\n        ) => void\n    ) {\n        this.#isResolved = false;\n        this.#isRejected = false;\n        this.#isCancelled = false;\n        this.#cancelHandlers = [];\n        this.#promise = new Promise<T>((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n\n            const onResolve = (value: T | PromiseLike<T>): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isResolved = true;\n                this.#resolve?.(value);\n            };\n\n            const onReject = (reason?: any): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isRejected = true;\n                this.#reject?.(reason);\n            };\n\n            const onCancel = (cancelHandler: () => void): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#cancelHandlers.push(cancelHandler);\n            };\n\n            Object.defineProperty(onCancel, 'isResolved', {\n                get: (): boolean => this.#isResolved,\n            });\n\n            Object.defineProperty(onCancel, 'isRejected', {\n                get: (): boolean => this.#isRejected,\n            });\n\n            Object.defineProperty(onCancel, 'isCancelled', {\n                get: (): boolean => this.#isCancelled,\n            });\n\n            return executor(onResolve, onReject, onCancel as OnCancel);\n        });\n    }\n\n     get [Symbol.toStringTag]() {\n            return \"Cancellable Promise\";\n     }\n\n    public then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n        onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n    ): Promise<TResult1 | TResult2> {\n        return this.#promise.then(onFulfilled, onRejected);\n    }\n\n    public catch<TResult = never>(\n        onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n    ): Promise<T | TResult> {\n        return this.#promise.catch(onRejected);\n    }\n\n    public finally(onFinally?: (() => void) | null): Promise<T> {\n        return this.#promise.finally(onFinally);\n    }\n\n    public cancel(): void {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n            return;\n        }\n        this.#isCancelled = true;\n        if (this.#cancelHandlers.length) {\n            try {\n                for (const cancelHandler of this.#cancelHandlers) {\n                    cancelHandler();\n                }\n            } catch (error) {\n                console.warn('Cancellation threw an error', error);\n                return;\n            }\n        }\n        this.#cancelHandlers.length = 0;\n        this.#reject?.(new CancelError('Request aborted'));\n    }\n\n    public get isCancelled(): boolean {\n        return this.#isCancelled;\n    }\n}\r\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\ntype Headers = Record<string, string>;\n\nexport type OpenAPIConfig = {\n    BASE: string;\n    VERSION: string;\n    WITH_CREDENTIALS: boolean;\n    CREDENTIALS: 'include' | 'omit' | 'same-origin';\n    TOKEN?: string | Resolver<string> | undefined;\n    USERNAME?: string | Resolver<string> | undefined;\n    PASSWORD?: string | Resolver<string> | undefined;\n    HEADERS?: Headers | Resolver<Headers> | undefined;\n    ENCODE_PATH?: ((path: string) => string) | undefined;\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n    BASE: '',\n    VERSION: 'Latest',\n    WITH_CREDENTIALS: false,\n    CREDENTIALS: 'include',\n    TOKEN: undefined,\n    USERNAME: undefined,\n    PASSWORD: undefined,\n    HEADERS: undefined,\n    ENCODE_PATH: undefined,\n};\r\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport const isDefined = <T>(value: T | null | undefined): value is Exclude<T, null | undefined> => {\n    return value !== undefined && value !== null;\n};\n\nexport const isString = (value: any): value is string => {\n    return typeof value === 'string';\n};\n\nexport const isStringWithValue = (value: any): value is string => {\n    return isString(value) && value !== '';\n};\n\nexport const isBlob = (value: any): value is Blob => {\n    return (\n        typeof value === 'object' &&\n        typeof value.type === 'string' &&\n        typeof value.stream === 'function' &&\n        typeof value.arrayBuffer === 'function' &&\n        typeof value.constructor === 'function' &&\n        typeof value.constructor.name === 'string' &&\n        /^(Blob|File)$/.test(value.constructor.name) &&\n        /^(Blob|File)$/.test(value[Symbol.toStringTag])\n    );\n};\n\nexport const isFormData = (value: any): value is FormData => {\n    return value instanceof FormData;\n};\n\nexport const base64 = (str: string): string => {\n    try {\n        return btoa(str);\n    } catch (err) {\n        // @ts-ignore\n        return Buffer.from(str).toString('base64');\n    }\n};\n\nexport const getQueryString = (params: Record<string, any>): string => {\n    const qs: string[] = [];\n\n    const append = (key: string, value: any) => {\n        qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n    };\n\n    const process = (key: string, value: any) => {\n        if (isDefined(value)) {\n            if (Array.isArray(value)) {\n                value.forEach(v => {\n                    process(key, v);\n                });\n            } else if (typeof value === 'object') {\n                Object.entries(value).forEach(([k, v]) => {\n                    process(`${key}[${k}]`, v);\n                });\n            } else {\n                append(key, value);\n            }\n        }\n    };\n\n    Object.entries(params).forEach(([key, value]) => {\n        process(key, value);\n    });\n\n    if (qs.length > 0) {\n        return `?${qs.join('&')}`;\n    }\n\n    return '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n    const encoder = config.ENCODE_PATH || encodeURI;\n\n    const path = options.url\n        .replace('{api-version}', config.VERSION)\n        .replace(/{(.*?)}/g, (substring: string, group: string) => {\n            if (options.path?.hasOwnProperty(group)) {\n                return encoder(String(options.path[group]));\n            }\n            return substring;\n        });\n\n    const url = `${config.BASE}${path}`;\n    if (options.query) {\n        return `${url}${getQueryString(options.query)}`;\n    }\n    return url;\n};\n\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\n    if (options.formData) {\n        const formData = new FormData();\n\n        const process = (key: string, value: any) => {\n            if (isString(value) || isBlob(value)) {\n                formData.append(key, value);\n            } else {\n                formData.append(key, JSON.stringify(value));\n            }\n        };\n\n        Object.entries(options.formData)\n            .filter(([_, value]) => isDefined(value))\n            .forEach(([key, value]) => {\n                if (Array.isArray(value)) {\n                    value.forEach(v => process(key, v));\n                } else {\n                    process(key, value);\n                }\n            });\n\n        return formData;\n    }\n    return undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nexport const resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n    if (typeof resolver === 'function') {\n        return (resolver as Resolver<T>)(options);\n    }\n    return resolver;\n};\n\nexport const getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions): Promise<Headers> => {\n    const token = await resolve(options, config.TOKEN);\n    const username = await resolve(options, config.USERNAME);\n    const password = await resolve(options, config.PASSWORD);\n    const additionalHeaders = await resolve(options, config.HEADERS);\n\n    const headers = Object.entries({\n        Accept: 'application/json',\n        ...additionalHeaders,\n        ...options.headers,\n    })\n        .filter(([_, value]) => isDefined(value))\n        .reduce((headers, [key, value]) => ({\n            ...headers,\n            [key]: String(value),\n        }), {} as Record<string, string>);\n\n    if (isStringWithValue(token)) {\n        headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    if (isStringWithValue(username) && isStringWithValue(password)) {\n        const credentials = base64(`${username}:${password}`);\n        headers['Authorization'] = `Basic ${credentials}`;\n    }\n\n    if (options.body) {\n        if (options.mediaType) {\n            headers['Content-Type'] = options.mediaType;\n        } else if (isBlob(options.body)) {\n            headers['Content-Type'] = options.body.type || 'application/octet-stream';\n        } else if (isString(options.body)) {\n            headers['Content-Type'] = 'text/plain';\n        } else if (!isFormData(options.body)) {\n            headers['Content-Type'] = 'application/json';\n        }\n    }\n\n    return new Headers(headers);\n};\n\nexport const getRequestBody = (options: ApiRequestOptions): any => {\n    if (options.body !== undefined) {\n        if (options.mediaType?.includes('/json')) {\n            return JSON.stringify(options.body)\n        } else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\n            return options.body;\n        } else {\n            return JSON.stringify(options.body);\n        }\n    }\n    return undefined;\n};\n\nexport const sendRequest = async (\n    config: OpenAPIConfig,\n    options: ApiRequestOptions,\n    url: string,\n    body: any,\n    formData: FormData | undefined,\n    headers: Headers,\n    onCancel: OnCancel\n): Promise<Response> => {\n    const controller = new AbortController();\n\n    const request: RequestInit = {\n        headers,\n        body: body ?? formData,\n        method: options.method,\n        signal: controller.signal,\n    };\n\n    if (config.WITH_CREDENTIALS) {\n        request.credentials = config.CREDENTIALS;\n    }\n\n    onCancel(() => controller.abort());\n\n    return await fetch(url, request);\n};\n\nexport const getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\n    if (responseHeader) {\n        const content = response.headers.get(responseHeader);\n        if (isString(content)) {\n            return content;\n        }\n    }\n    return undefined;\n};\n\nexport const getResponseBody = async (response: Response): Promise<any> => {\n    if (response.status !== 204) {\n        try {\n            const contentType = response.headers.get('Content-Type');\n            if (contentType) {\n                const jsonTypes = ['application/json', 'application/problem+json']\n                const isJSON = jsonTypes.some(type => contentType.toLowerCase().startsWith(type));\n                if (isJSON) {\n                    return await response.json();\n                } else {\n                    return await response.text();\n                }\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    return undefined;\n};\n\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n    const errors: Record<number, string> = {\n        400: 'Bad Request',\n        401: 'Unauthorized',\n        403: 'Forbidden',\n        404: 'Not Found',\n        500: 'Internal Server Error',\n        502: 'Bad Gateway',\n        503: 'Service Unavailable',\n        ...options.errors,\n    }\n\n    const error = errors[result.status];\n    if (error) {\n        throw new ApiError(options, result, error);\n    }\n\n    if (!result.ok) {\n        const errorStatus = result.status ?? 'unknown';\n        const errorStatusText = result.statusText ?? 'unknown';\n        const errorBody = (() => {\n            try {\n                return JSON.stringify(result.body, null, 2);\n            } catch (e) {\n                return undefined;\n            }\n        })();\n\n        throw new ApiError(options, result,\n            `Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\n        );\n    }\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions): CancelablePromise<T> => {\n    return new CancelablePromise(async (resolve, reject, onCancel) => {\n        try {\n            const url = getUrl(config, options);\n            const formData = getFormData(options);\n            const body = getRequestBody(options);\n            const headers = await getHeaders(config, options);\n\n            if (!onCancel.isCancelled) {\n                const response = await sendRequest(config, options, url, body, formData, headers, onCancel);\n                const responseBody = await getResponseBody(response);\n                const responseHeader = getResponseHeader(response, options.responseHeader);\n\n                const result: ApiResult = {\n                    url,\n                    ok: response.ok,\n                    status: response.status,\n                    statusText: response.statusText,\n                    body: responseHeader ?? responseBody,\n                };\n\n                catchErrorCodes(options, result);\n\n                resolve(result.body);\n            }\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\r\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { PagedTimeTreeItemResponseModel } from '../models/PagedTimeTreeItemResponseModel';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\n\nexport class TimeResource {\n\n    /**\n     * @returns string Success\n     * @throws ApiError\n     */\n    public static getDate(): CancelablePromise<string> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/time/api/v1/time/date',\n        });\n    }\n\n    /**\n     * @returns string Success\n     * @throws ApiError\n     */\n    public static getTime(): CancelablePromise<string> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/time/api/v1/time/time',\n        });\n    }\n\n    /**\n     * @returns PagedTimeTreeItemResponseModel Success\n     * @throws ApiError\n     */\n    public static getChildren({\nparentId,\nskip,\ntake = 100,\n}: {\nparentId?: string,\nskip?: number,\ntake?: number,\n}): CancelablePromise<PagedTimeTreeItemResponseModel> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/time/api/v1/tree',\n            query: {\n                'parentId': parentId,\n                'skip': skip,\n                'take': take,\n            },\n        });\n    }\n\n    /**\n     * @returns PagedTimeTreeItemResponseModel Success\n     * @throws ApiError\n     */\n    public static getRoot({\nskip,\ntake = 100,\n}: {\nskip?: number,\ntake?: number,\n}): CancelablePromise<PagedTimeTreeItemResponseModel> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/time/api/v1/tree/root',\n            query: {\n                'skip': skip,\n                'take': take,\n            },\n        });\n    }\n\n}\r\n","import { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\n\r\n// load up the manifests here.\r\nimport { manifests as dashboardManifests } from './dashboards/manifest.ts';\r\nimport { manifests as contextManifests }  from './context/manifest.ts';\r\nimport { manifests as sectionManifests } from './section/manifest.ts';\r\nimport { manifests as sidebarAppManifests} from './sidebar/manifest.ts';\r\nimport { manifests as workspaceManifest} from './workspace/manifest.ts';\r\nimport { manifests as documentManifests } from './documents/manifest.ts';\r\nimport { manifests as headerManifests } from './header/manifest.ts';\r\nimport { manifests as localizationManifests } from './lang/manifest.ts';\r\nimport { manifests as workspaceActionManifests} from './actions/workspace/manifest.ts';\r\nimport { manifests as entityActionManifests } from './actions/entity/manifest.ts';\r\n\r\nimport { manifests as styledTextManifests} from './editor/manifest.ts';\r\nimport { manifests as modalManifests } from './dialogs/manifests.ts';\r\n\r\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth';\r\nimport { OpenAPI } from './api/index.ts';\r\n\r\n\r\nexport const onInit: UmbEntryPointOnInit = (_host, extensionRegistry) => {\r\n    \r\n    // register them here. \r\n    extensionRegistry.registerMany([\r\n        ...contextManifests,\r\n        ...dashboardManifests,\r\n        ...sectionManifests,\r\n        ...sidebarAppManifests,\r\n        ...workspaceManifest,        \r\n        ...documentManifests,\r\n        ...headerManifests,\r\n        ...localizationManifests,\r\n        ...workspaceActionManifests,\r\n        ...entityActionManifests,\r\n        ...styledTextManifests,\r\n        ...modalManifests,\r\n    ]);\r\n\r\n    _host.consumeContext(UMB_AUTH_CONTEXT, (_auth) => {\r\n        const umbOpenApi = _auth.getOpenApiConfiguration();\r\n        OpenAPI.TOKEN = umbOpenApi.token;\r\n        OpenAPI.BASE = umbOpenApi.base;\r\n        OpenAPI.WITH_CREDENTIALS = umbOpenApi.withCredentials;\r\n    });\r\n\r\n};\r\n","import { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UmbDataSourceResponse  } from \"@umbraco-cms/backoffice/repository\";\r\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\r\nimport { TimeResource } from \"../../api\";\r\n\r\n\r\nexport interface TimeDataSource {\r\n\r\n    getTime() : Promise<UmbDataSourceResponse<string>>;\r\n    getDate() : Promise<UmbDataSourceResponse<string>>;\r\n\r\n}\r\n\r\nexport class TimeManagementDataSource implements TimeDataSource {\r\n\r\n    #host: UmbControllerHost;\r\n\r\n    constructor(host: UmbControllerHost) {\r\n        this.#host = host;\r\n    }\r\n\r\n    async getTime(): Promise<UmbDataSourceResponse<string>> {\r\n        return await tryExecuteAndNotify(this.#host, TimeResource.getTime())\r\n    }\r\n\r\n    async getDate(): Promise<UmbDataSourceResponse<string>> {\r\n        return await tryExecuteAndNotify(this.#host, TimeResource.getDate())\r\n    }\r\n    \r\n}","import { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\r\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { TimeManagementDataSource } from \"./sources/time.datasource\";\r\n\r\nexport class TimeManagementRespository extends UmbControllerBase {\r\n    #timeDataSource: TimeManagementDataSource;\r\n\r\n    constructor(host: UmbControllerHost) {\r\n        super(host);\r\n        this.#timeDataSource = new TimeManagementDataSource(this);\r\n\r\n        console.log('repository constructor');\r\n    }\r\n\r\n    async getTime() {\r\n        return this.#timeDataSource.getTime();\r\n    }\r\n\r\n    async getDate() {\r\n        return this.#timeDataSource.getDate();\r\n    }\r\n}","import { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\r\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UmbContextToken } from \"@umbraco-cms/backoffice/context-api\";\r\nimport { UmbBooleanState, UmbStringState } from \"@umbraco-cms/backoffice/observable-api\";\r\n\r\nimport { TimeManagementRespository } from \"../repository/time.repository\";\r\n\r\nexport class TimeManagementContext extends UmbControllerBase {\r\n   \r\n    #repository: TimeManagementRespository;\r\n\r\n    #time = new UmbStringState(\"unknown\");\r\n    public readonly time = this.#time.asObservable();\r\n\r\n    #date = new UmbStringState(\"unknown\");\r\n    public readonly date = this.#date.asObservable();\r\n    \r\n    constructor(host: UmbControllerHost) {\r\n        super(host);\r\n\r\n        this.provideContext(TIME_MANAGEMENT_CONTEXT_TOKEN, this);\r\n        this.#repository = new TimeManagementRespository(this);\r\n    }\r\n\r\n    async getTime() {\r\n        const {data} = await this.#repository.getTime();\r\n\r\n        if (data) {\r\n            this.#time.setValue(data);\r\n        }\r\n    }\r\n\r\n    async getDate() {\r\n        const {data} = await this.#repository.getDate();\r\n\r\n        if (data) {\r\n            this.#date.setValue(data);\r\n        }\r\n    }\r\n\r\n    async getDateAndTime() {\r\n        this.getTime();\r\n        this.getDate();\r\n    }\r\n\r\n    #intervalId: number | null = null; \r\n\r\n    #polling = new UmbBooleanState(false);\r\n    polling = this.#polling.asObservable();\r\n\r\n    togglePolling() {\r\n        const isEnabled = !this.#polling.getValue();\r\n        this.#polling.setValue(isEnabled);\r\n\r\n        if (isEnabled) {\r\n            this.#intervalId = setInterval(() => {\r\n                this.getDateAndTime();\r\n            }, 750) as unknown as number;\r\n            return;\r\n        }\r\n\r\n        clearInterval(this.#intervalId as number);\r\n    }\r\n\r\n}\r\n\r\nexport default TimeManagementContext;\r\n\r\nexport const TIME_MANAGEMENT_CONTEXT_TOKEN = \r\n    new UmbContextToken<TimeManagementContext>(TimeManagementContext.name);","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { LitElement, html, css , customElement, property } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport TimeManagementContext, { TIME_MANAGEMENT_CONTEXT_TOKEN } from \"../context/time.context\";\r\n\r\n@customElement('timedashboard-dashboard')\r\nexport class TimeDashboardDashboard extends UmbElementMixin(LitElement) {\r\n\r\n    #timeContext? : TimeManagementContext;\r\n\r\n    @property({type: String})\r\n    time ?: string;\r\n\r\n    @property({type: String})\r\n    date ?: string;\r\n\r\n    @property({type: Boolean})\r\n    isPolling : boolean = false;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(TIME_MANAGEMENT_CONTEXT_TOKEN, (_instance) => {\r\n            this.#timeContext = _instance;\r\n\r\n            this.observe(_instance.time, (_time) => {\r\n                this.time = _time;\r\n            });\r\n\r\n            this.observe(_instance.date, (_date) => {\r\n                this.date = _date;\r\n            });\r\n\r\n            this.observe(_instance.polling, (_polling) => {\r\n                this.isPolling = _polling;\r\n            })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description called when the element is first connected to the dom.\r\n     */\r\n    connectedCallback(): void {\r\n        super.connectedCallback();\r\n\r\n        if (this.#timeContext != null) {\r\n            this.#timeContext.getDateAndTime();\r\n            this.#timeContext.togglePolling();\r\n        }\r\n    }\r\n\r\n    @property()\r\n    title = '';\r\n\r\n    @property()\r\n    description = 'Show the time the server thinks it is.'\r\n\r\n    async getTime() {\r\n        await this.#timeContext?.getTime();     \r\n    }\r\n\r\n    async getDate() {\r\n        await this.#timeContext?.getDate();\r\n    }\r\n\r\n    toggle() {\r\n        console.log('toggle');\r\n        this.#timeContext?.togglePolling();\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <uui-box headline=\"${this.localize.term('time_name')}\">\r\n                <div slot=\"header\">\r\n                    <umb-localize key=\"time_description\"></umb-localize>\r\n                </div>\r\n                <div class=\"time-box\">\r\n                  <h2>${this.time}</h2>\r\n                  <uui-button \r\n                    .disabled=${this.isPolling}\r\n                    @click=${this.getTime} look=\"primary\" color=\"positive\" label=\"get time\"></uui-button>\r\n                </div>\r\n\r\n                <div class=\"time-box\">\r\n                  <h2>${this.date}</h2>\r\n                  <uui-button \r\n                    .disabled=${this.isPolling}\r\n                    @click=${this.getDate} look=\"primary\" color=\"default\" label=\"get date\"></uui-button>\r\n                </div>\r\n\r\n                <div>\r\n                    <uui-toggle label=\"update\"\r\n                        .checked=\"${this.isPolling || false}\"\r\n                        @change=${this.toggle}>automatically update</uui-toggle>\r\n                </div>\r\n            </uui-box>\r\n        `\r\n    }\r\n\r\n    static styles = css`\r\n        :host {\r\n            display: block;\r\n            padding: 20px;\r\n        }\r\n\r\n        .time-box {\r\n            display: flex;\r\n            margin-bottom: 10px;\r\n            justify-content: space-between;\r\n        }\r\n    `\r\n}\r\n\r\nexport default TimeDashboardDashboard;\r\n\r\ndeclare global {\r\n    interface HtmlElementTagNameMap {\r\n        'timedashboard-dashboard': TimeDashboardDashboard\r\n    }\r\n}","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { ManifestMenuItem, UmbMenuItemElement } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { LitElement, customElement, html, ifDefined, property } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { ManifestTimeMenuItem } from \"./manifest\";\r\n\r\n@customElement('time-nested-menu-item')\r\nexport class NestedMenuItemElement extends UmbElementMixin(LitElement) \r\nimplements UmbMenuItemElement {\r\n\r\n    @property({type: Object, attribute: false})\r\n    manifest!: ManifestMenuItem\r\n\r\n    render() {\r\n        return html`\r\n            <umb-menu-item-layout\r\n                label=${this.manifest.meta.label || this.manifest.name}\r\n                icon-name=${this.manifest.meta.icon}\r\n                entity-type=${ifDefined(this.manifest.meta.entityType)}\r\n                has-Children=${true}>${this.renderChildren()}</umb-menu-item-layout>`;\r\n\t}\r\n\r\n    renderChildren() {\r\n\t\treturn html` <umb-extension-slot\r\n\t\t\ttype=\"time-menu-item\"\r\n\t\t\t.filter=${(items: ManifestTimeMenuItem) => items.meta.menus.includes(this.manifest!.alias)}\r\n    \t\tdefault-element=\"umb-menu-item-default\"></umb-extension-slot>`;\r\n    }\r\n}\r\n\r\nexport default NestedMenuItemElement;","import { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\r\nimport { UmbContextToken } from \"@umbraco-cms/backoffice/context-api\";\r\nimport { UmbControllerHostElement } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UMB_WORKSPACE_CONTEXT, type UmbWorkspaceContextInterface } from '@umbraco-cms/backoffice/workspace';\r\n\r\n\r\nexport class TimeWorkspaceContext extends UmbControllerBase implements UmbWorkspaceContextInterface {\r\n    public readonly workspaceAlias: string = 'time.workspace';\r\n\r\n    constructor(host:UmbControllerHostElement) {\r\n        super(host);\r\n        this.provideContext(UMB_WORKSPACE_CONTEXT, this);\r\n        this.provideContext(TIME_WORKSPACE_CONTEXT, this);\r\n    }\r\n\r\n    getEntityType(): string {\r\n        return 'time-workspace';\r\n    }\r\n\r\n    getUnique(): string | undefined {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport default TimeWorkspaceContext;\r\n\r\nexport const TIME_WORKSPACE_CONTEXT  = new UmbContextToken<TimeWorkspaceContext>(\r\n    TimeWorkspaceContext.name,\r\n);","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { LitElement, html, customElement, css } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport TimeWorkspaceContext from \"./context\";\r\n\r\n@customElement('time-workspace-root')\r\nexport class TimeWorkspaceElement extends UmbElementMixin(LitElement) {\r\n    #workspaceContext = new TimeWorkspaceContext(this);\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.#workspaceContext._host;\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n        \t<umb-workspace-editor headline=\"Time\" alias=\"time.workspace\" .enforceNoFooter=${true}>\r\n            </umb-workspace-editor>\r\n        `;\r\n    }\r\n\r\n    static styles = css`\r\n        uui-box {\r\n            display: block;\r\n            margin: 20px;\r\n        }\r\n    `;\r\n}\r\n\r\nexport default TimeWorkspaceElement;\r\n\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'time-workspace-root': TimeWorkspaceElement\r\n\t}\r\n}\r\n","import { LitElement, css, customElement, html, state } from \"@umbraco-cms/backoffice/external/lit\";\r\n\r\n@customElement('time-workspace-default-view')\r\nexport class TimeDefaultWorkspaceElement extends LitElement {\r\n\r\n    @state()\r\n    text? : string = 'your text goes here';\r\n\r\n    #onTextChange(e : InputEvent ) {\r\n        this.text = (e.target as HTMLInputElement).value;\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <umb-body-layout header-transparent header-fit-height>\r\n                <uui-box headline=\"default view\">\r\n                    <umb-property-layout\r\n                        label=\"property\"\r\n                        description=\"property description\">\r\n                        <div slot=\"editor\">\r\n                            <uui-input \r\n                                slot=\"editor\"\r\n                                type=\"text\"\r\n                                @change=${this.#onTextChange}\r\n                                .value=${this.text}></uui-input>\r\n                        </div>\r\n                    </umb-property-layout>\r\n\r\n                    <em>[${this.text}]</em>\r\n                </uui-box>\r\n            </umb-body-layout>\r\n\r\n        `\r\n    };\r\n\r\n    static styles = css`\r\n        uui-input {\r\n            width: 100%;\r\n            --uui-button-border-radius: 0;\r\n        }\r\n    `\r\n}\r\n\r\nexport default TimeDefaultWorkspaceElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'time-workspace-default-view': TimeDefaultWorkspaceElement\r\n    }\r\n}","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { LitElement, customElement, html, state } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UMB_PROPERTY_DATASET_CONTEXT } from \"@umbraco-cms/backoffice/property\";\r\n\r\n@customElement('time-workspace-settings-view')\r\nexport class TimeSettingsWorkspaceElement extends UmbElementMixin(LitElement) {\r\n    \r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(UMB_PROPERTY_DATASET_CONTEXT, async (context) => {\r\n\r\n            this.observe(\r\n                await context.propertyValueByAlias('textProperty'),\r\n                (value) => {\r\n                    console.log(value);\r\n                },\r\n                'observetextProperty',\r\n            );\r\n        });\r\n   \r\n    }\r\n\r\n\r\n    @state()\r\n    setting = 'Hello';\r\n\r\n    render() {\r\n        return html`\r\n            <umb-body-layout header-transparent header-fit-height>\r\n                <uui-box headline=\"settings view\">\r\n\r\n                    Something...\r\n\r\n                    <umb-property\r\n                        label=\"Icon picker\"\r\n                        description=\"pick an icon\"\r\n                        alias=\"setting\"\r\n                        property-editor-ui-alias=\"Umb.PropertyEditorUi.TextBox\"></umb-property>\r\n\r\n                        <pre>${this.setting}</pre>\r\n                </uui-box>\r\n            </umb-body-layout>\r\n        `\r\n    }\r\n\r\n}\r\n\r\nexport default TimeSettingsWorkspaceElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'time-workspace-settings-view': TimeSettingsWorkspaceElement\r\n    }\r\n}","import { UmbModalToken } from \"@umbraco-cms/backoffice/modal\";\r\n\r\nexport interface TimeCustomModalData {\r\n    headline: string;\r\n    content: string;\r\n}\r\n\r\nexport interface TimeCustomModalValue {\r\n    content: string \r\n}\r\n\r\nexport const TIME_CUSTOM_MODAL = new UmbModalToken<TimeCustomModalData, TimeCustomModalValue>(\r\n    \"time.custom.modal\",\r\n    {\r\n        modal: {\r\n            type: 'sidebar',\r\n            size: 'medium'\r\n        }\r\n    }\r\n);","import { UMB_BLOCK_CATALOGUE_MODAL } from \"@umbraco-cms/backoffice/block\";\r\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { LitElement, css, customElement, html, state } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { \r\n    UMB_CODE_EDITOR_MODAL, \r\n    UMB_CONFIRM_MODAL,\r\n    // UMB_DATA_TYPE_PICKER_MODAL,\r\n    // UMB_DICTIONARY_ITEM_PICKER_MODAL,\r\n    // UMB_DOCUMENT_TYPE_PICKER_MODAL,\r\n    UMB_ICON_PICKER_MODAL,\r\n    UMB_MEDIA_TREE_PICKER_MODAL,\r\n    UMB_MODAL_MANAGER_CONTEXT, \r\n    // UMB_PARTIAL_VIEW_PICKER_MODAL,\r\n    // UMB_TEMPLATE_PICKER_MODAL,\r\n    UMB_WORKSPACE_MODAL,\r\n    UmbModalManagerContext,\r\n    UmbModalToken } from \"@umbraco-cms/backoffice/modal\";\r\nimport { extractUmbColorVariable } from \"@umbraco-cms/backoffice/resources\";\r\nimport { TIME_CUSTOM_MODAL } from \"../../dialogs/custom-modal-token\";\r\n\r\n@customElement(\"dialog-examples-view\")\r\nexport class TimeDialogExamplesElement extends UmbElementMixin(LitElement) {\r\n\r\n    private _modalContext?: UmbModalManagerContext;\r\n\r\n    constructor() {\r\n        super();\r\n        this.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (_instance) => {\r\n            this._modalContext = _instance;\r\n        });\r\n    }\r\n\r\n    @state()\r\n    icon = '';\r\n\r\n    @state()\r\n    color = ''; \r\n\r\n\r\n    async _OpenCustomModal() {\r\n\r\n        const customContext = this._modalContext?.open(this, TIME_CUSTOM_MODAL, {\r\n            data: {\r\n                headline: 'A Custom modal',\r\n                content: 'Some content for the custom modal'\r\n            }\r\n        });\r\n\r\n        const data = await customContext?.onSubmit();\r\n\r\n        if (!data) return;\r\n\r\n        console.log('data', data);\r\n    }\r\n    \r\n    async _OpenIconPicker() {\r\n\r\n        const modal = UMB_ICON_PICKER_MODAL;\r\n\r\n        const pickerContext = this._modalContext?.open(this, modal);\r\n\r\n        const data = await pickerContext?.onSubmit();\r\n        if (!data) return;\r\n\r\n        console.log(data);\r\n\r\n        if (data.color) {\r\n            this.color = data.color as string;\r\n        }\r\n        this.icon = data.icon as string;\r\n    }\r\n\r\n    modal_names = [\r\n        {name: 'Icon Picker', value: UMB_ICON_PICKER_MODAL},\r\n        // {name: 'Data Type Picker', value: UMB_DATA_TYPE_PICKER_MODAL },\r\n        {name: 'Block cataloug', value: UMB_BLOCK_CATALOGUE_MODAL }, \r\n        {name: 'Workspace', value: UMB_WORKSPACE_MODAL},\r\n        // {name: 'Document Type picker', value: UMB_DOCUMENT_TYPE_PICKER_MODAL},\r\n        {name: 'Code editor', value: UMB_CODE_EDITOR_MODAL},\r\n        // {name: 'template picker', value: UMB_TEMPLATE_PICKER_MODAL},\r\n        // {name: 'dictionary item picker', value: UMB_DICTIONARY_ITEM_PICKER_MODAL },\r\n        // {name: 'Partial view picker', value: UMB_PARTIAL_VIEW_PICKER_MODAL},\r\n        {name: 'Media tree picker', value: UMB_MEDIA_TREE_PICKER_MODAL}];\r\n\r\n\r\n    render() {\r\n        return html`\r\n            <umb-body-layout header-transparent header-fit-height>\r\n                <uui-box headline=\"Dialog Examples\">\r\n                    <div class=\"picker\">\r\n                        <div>\r\n                            <uui-icon name=\"${this.icon}\" style=\"color:var(${extractUmbColorVariable(this.color)})\"></uui-icon>\r\n                            <pre>${this.icon} ${this.color}</pre>\r\n                        </div>\r\n                        <div>\r\n                            <uui-button look=\"primary\"\r\n                                        color=\"default\"\r\n                                        label=\"Pick an icon\"\r\n                                        @click=${this._OpenIconPicker}></uui-button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <uui-button look=\"secondary\"\r\n                                    color=\"positive\"\r\n                                    label=\"custom dialog\"\r\n                                    @click=${this._OpenCustomModal}></uui-button>\r\n                    </div>\r\n                </uui-box>\r\n\r\n                \r\n\r\n                <uui-box>\r\n                    ${this.render_modals()}\r\n                </uui-box>\r\n\r\n                <uui-box>\r\n                    <uui-button \r\n                        color=\"danger\" \r\n                        look=\"primary\"\r\n                        label=\"Confirm?\" @click=${this.openConfirm}></uui-button>\r\n                </uui-box>\r\n            </umb-body-layout>        \r\n        `;\r\n    };\r\n\r\n    async openConfirm() {\r\n\r\n        const confirmContext= this._modalContext?.open(this, UMB_CONFIRM_MODAL, {\r\n            data: {\r\n                headline: `Are you sure`,\r\n                content: 'Do you really want to do the thing here?',\r\n                confirmLabel: 'Confim',\r\n                color: 'danger',\r\n            }\r\n        });\r\n\r\n        confirmContext?.onSubmit()\r\n            .then(()=> {\r\n                console.log('confirm');\r\n            })\r\n            .catch(() => {\r\n                console.log('cancel');\r\n            });\r\n    }\r\n\r\n    async openModal(name : UmbModalToken<object, unknown>) {\r\n\r\n        const modalContext = this._modalContext?.open(this, name);\r\n        const data = await modalContext?.onSubmit();\r\n\r\n        console.log(data);\r\n    }\r\n\r\n    render_modals() {\r\n\r\n        const buttons = this.modal_names.map((m) => {\r\n\r\n            return html`\r\n                <uui-button .label=${m.name}\r\n                color=\"default\" look=\"secondary\"\r\n                @click=${() => this.openModal(m.value)}></uui-button>\r\n            `;\r\n\r\n        });\r\n\r\n        return html`\r\n            <div class=\"buttons\">\r\n                ${buttons}\r\n            </div>\r\n        `\r\n\r\n    }\r\n\r\n    static styles = css`\r\n\r\n        uui-icon {\r\n            font-size: 25pt;\r\n        }\r\n\r\n        .picker {\r\n            display: flex;\r\n        }\r\n        .buttons {\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n        }\r\n\r\n        .buttons > uui-button {\r\n            margin: 10px ;\r\n        }\r\n\r\n    `;\r\n\r\n}\r\n\r\nexport default TimeDialogExamplesElement;\r\n\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'time-dialog-examples-view': TimeDialogExamplesElement\r\n    }\r\n}","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { html, LitElement, customElement, css, state } from '@umbraco-cms/backoffice/external/lit'\r\nimport { UMB_WORKSPACE_CONTEXT, UmbVariantableWorkspaceContextInterface } from \"@umbraco-cms/backoffice/workspace\";\r\n\r\n@customElement('time-document-workspace-view')\r\nexport class TimeDocumentWorkspaceElement extends UmbElementMixin(LitElement) {\r\n\r\n    @state()\r\n    pageName? : string = '';\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.consumeContext(UMB_WORKSPACE_CONTEXT, (nodeContext) => {\r\n            var variantContext = (nodeContext as UmbVariantableWorkspaceContextInterface);\r\n            console.log(variantContext.getName());\r\n            \r\n            this.pageName = variantContext.getName();\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n\r\n            <uui-box headline=\"A content app?\">\r\n                <h2>Page Name: ${this.pageName}</h2>\r\n            </uui-box>\r\n\r\n        `;\r\n    }\r\n\r\n    static styles = css`\r\n        uui-box {\r\n            margin: 20px;\r\n        }\r\n    `\r\n}\r\n\r\nexport default TimeDocumentWorkspaceElement;","import { UmbElementMixin } from '@umbraco-cms/backoffice/element-api';\r\nimport { LitElement, html, customElement, css } from '@umbraco-cms/backoffice/external/lit';\r\nimport { UMB_MODAL_MANAGER_CONTEXT } from '@umbraco-cms/backoffice/modal';\r\n\r\n@customElement('time-header-app')\r\nexport class TimeHeaderAppElement extends UmbElementMixin(LitElement) {\r\n\r\n    #onTime() {\r\n        this.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (manager) =>{\r\n            manager.open(this, 'time.header.modal', {});\r\n        } )\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <uui-button @click=${this.#onTime}\r\n                look=\"primary\"\r\n                label=\"time\"\r\n                compact>\r\n                <uui-icon name=\"icon-alarm-clock\"></uui-icon>\r\n            </uui-button>\r\n        `\r\n    }\r\n\r\n    static styles = css`\r\n        uui-button {\r\n            font-size: 18pt;\r\n            --uui-button-background-color: transparent;\r\n        }\r\n    `\r\n    \r\n}\r\n\r\nexport default TimeHeaderAppElement;\r\n","import { UmbModalBaseElement } from \"@umbraco-cms/backoffice/modal\";\r\nimport { html, customElement } from \"@umbraco-cms/backoffice/external/lit\";\r\n\r\n@customElement('time-header-modal')\r\nexport class TimeHeaderModalElement extends UmbModalBaseElement {\r\n\r\n    #handleClose() {\r\n\t\tthis.modalContext?.reject();\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <uui-dialog-layout class=\"uui-text\"\r\n                headline=\"a modal dialog box\">\r\n                <p>Some modal things go here</p>\r\n\r\n                <uui-button slot=\"actions\" id=\"close\" label=\"Close\"\r\n                    look='primary'  color='danger'\r\n                     @click=\"${this.#handleClose}\">Close</uui-button>\r\n\r\n            </uui-dialog-layout>\r\n        `;\r\n    }\r\n}\r\n\r\nexport default TimeHeaderModalElement;","export default {\r\n    time: {\r\n        name: 'Time Dashboard',\r\n        description: 'what time the server thinks it is'\r\n    }\r\n};","import { UmbPropertyEditorUiElement } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { customElement, property, LitElement, css, html, state } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbPropertyEditorConfigCollection } from \"@umbraco-cms/backoffice/property-editor\";\r\n\r\n@customElement('styled-textbox')\r\nexport class StyledTextboxUiElement extends LitElement \r\n     implements UmbPropertyEditorUiElement {\r\n\r\n      @property()\r\n      value: undefined | String = '' ;\r\n\r\n      @state() \r\n      _styleValue? : string;\r\n\r\n      @property({ attribute: false })\r\n      public set config(config: UmbPropertyEditorConfigCollection | undefined) {\r\n          this._styleValue = config?.getValueByAlias('styleValue') ?? '';\r\n      }\r\n\r\n      onChange(e: Event) {\r\n        const newValue = (e.target as HTMLInputElement).value;\r\n        if (newValue === this.value) return;\r\n        this.value = newValue;\r\n        console.log(this.value);\r\n        this.dispatchEvent(new CustomEvent('property-value-change'));\r\n      }\r\n\r\n      render() {\r\n        return html`\r\n            <uui-input\r\n              .value=${this.value ?? ''}\r\n              .style=${this._styleValue}\r\n              type=\"text\"\r\n              @input=${this.onChange}></uui-input>\r\n        `;\r\n      }\r\n\r\n      static styles = css`\r\n        uui-input {\r\n          width: 100%;\r\n        }`\r\n       \r\n        ;\r\n}\r\n\r\nexport default StyledTextboxUiElement;\r\n\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap { \r\n    'styled-textbox': StyledTextboxUiElement;\r\n  }\r\n}","import { customElement, html, state } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbModalBaseElement } from \"@umbraco-cms/backoffice/modal\";\r\nimport { TimeCustomModalData, TimeCustomModalValue } from \"./custom-modal-token\";\r\nimport { UUIInputEvent } from \"@umbraco-cms/backoffice/external/uui\";\r\n\r\n@customElement('time-custom-modal')\r\nexport class TimeCustomModalElement extends \r\n    UmbModalBaseElement<TimeCustomModalData, TimeCustomModalValue> \r\n{\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback(): void {\r\n        super.connectedCallback();\r\n        this.updateValue({content: this.data?.content});       \r\n    }\r\n\r\n    @state()\r\n    content: string = '';\r\n\r\n    #handleConfirm() {\r\n\t\tthis.value = { content: this.data?.content ?? ''} ;\r\n\t\tthis.modalContext?.submit();\r\n\t}\r\n\r\n\t#handleCancel() {\r\n\t\tthis.modalContext?.reject();\r\n\t}\r\n\r\n    #contentChange(event: UUIInputEvent) {\r\n        this.updateValue({content: event.target.value.toString()});\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <umb-body-layout .headline=${this.data?.headline ?? 'Custom dialog'}>\r\n                <uui-box>\r\n                    <uui-textarea label=\"content\" \r\n                        rows=10\r\n                        .value=${this.data?.content}\r\n                        @input=${this.#contentChange}>\r\n                    </uui-textarea>\r\n                </uui-box>\r\n                <uui-box>\r\n                    <h2>Return Value</h2>\r\n                    <pre>${this.value?.content}</pre>\r\n                </uui-box>\r\n\r\n                <div slot=\"actions\">\r\n                        <uui-button id=\"cancel\" label=\"Cancel\" @click=\"${this.#handleCancel}\">Cancel</uui-button>\r\n                        <uui-button\r\n                            id=\"submit\"\r\n                            color='positive'\r\n                            look=\"primary\"\r\n                            label=\"Submit\"\r\n                            @click=${this.#handleConfirm}></uui-button>\r\n            </div>\r\n            </umb-body-layout>\r\n        `;\r\n    }\r\n    \r\n}\r\n\r\nexport default TimeCustomModalElement;"],"names":["dashboards","dashboard_element","manifests","contexts","time_context","sectionManifest","sidebarAppManifest","menuManifest","menuItemManifest","nestedMenu_element","nestedMenuManifest","nestedMenuItems","workspace","workspace_element","workspaceViews","defaultWorkspace_element","settingsWorkspace_element","dialogworkspace_element","context","workspaceActions","workspaceModals","workspaceView","timeWorkspaceView","header","timeHeaderElement","modal","timeHeaderModal","localizations","enUs$1","TimeAction","UmbWorkspaceActionBase","host","args","__privateAdd","_notificationContext","UMB_NOTIFICATION_CONTEXT","instance","__privateSet","_a","__privateGet","action","TimeEntityAction","UmbEntityActionBase","entityAction","UMB_DOCUMENT_ENTITY_TYPE","UMB_DOCUMENT_DETAIL_REPOSITORY_ALIAS","styledTextSchema","styledTextUi","styledtext_ui_element","modals","customModalElement","ApiError","request","response","message","CancelError","CancelablePromise","executor","_isResolved","_isRejected","_isCancelled","_cancelHandlers","_promise","_resolve","_reject","resolve","reject","onResolve","value","onReject","reason","onCancel","cancelHandler","onFulfilled","onRejected","onFinally","error","OpenAPI","isDefined","isString","isStringWithValue","isBlob","isFormData","base64","str","getQueryString","params","qs","append","key","process","v","k","getUrl","config","options","encoder","path","substring","group","url","getFormData","formData","_","resolver","getHeaders","token","username","password","additionalHeaders","headers","credentials","getRequestBody","sendRequest","body","controller","getResponseHeader","responseHeader","content","getResponseBody","contentType","type","catchErrorCodes","result","errorStatus","errorStatusText","errorBody","responseBody","TimeResource","__request","parentId","skip","take","onInit","_host","extensionRegistry","contextManifests","dashboardManifests","sectionManifests","sidebarAppManifests","workspaceManifest","documentManifests","headerManifests","localizationManifests","workspaceActionManifests","entityActionManifests","styledTextManifests","modalManifests","UMB_AUTH_CONTEXT","_auth","umbOpenApi","TimeManagementDataSource","tryExecuteAndNotify","TimeManagementRespository","UmbControllerBase","_timeDataSource","TimeManagementContext","_repository","_time","_date","_intervalId","_polling","UmbStringState","UmbBooleanState","TIME_MANAGEMENT_CONTEXT_TOKEN","data","isEnabled","UmbContextToken","_timeContext","TimeDashboardDashboard","UmbElementMixin","LitElement","_instance","html","css","__decorateClass","property","customElement","TimeDashboardDashboard$1","NestedMenuItemElement","ifDefined","items","NestedMenuItemElement$1","TimeWorkspaceContext","UMB_WORKSPACE_CONTEXT","TIME_WORKSPACE_CONTEXT","_workspaceContext","TimeWorkspaceElement","TimeWorkspaceElement$1","_onTextChange","onTextChange_fn","TimeDefaultWorkspaceElement","__privateMethod","e","state","TimeDefaultWorkspaceElement$1","TimeSettingsWorkspaceElement","UMB_PROPERTY_DATASET_CONTEXT","TimeSettingsWorkspaceElement$1","TIME_CUSTOM_MODAL","UmbModalToken","TimeDialogExamplesElement","UMB_ICON_PICKER_MODAL","UMB_BLOCK_CATALOGUE_MODAL","UMB_WORKSPACE_MODAL","UMB_CODE_EDITOR_MODAL","UMB_MEDIA_TREE_PICKER_MODAL","UMB_MODAL_MANAGER_CONTEXT","customContext","pickerContext","extractUmbColorVariable","confirmContext","UMB_CONFIRM_MODAL","name","modalContext","buttons","m","TimeDialogExamplesElement$1","TimeDocumentWorkspaceElement","nodeContext","variantContext","TimeDocumentWorkspaceElement$1","_onTime","onTime_fn","TimeHeaderAppElement","manager","TimeHeaderAppElement$1","_handleClose","handleClose_fn","TimeHeaderModalElement","UmbModalBaseElement","TimeHeaderModalElement$1","enUs","StyledTextboxUiElement","newValue","StyledTextboxUiElement$1","_handleConfirm","handleConfirm_fn","_handleCancel","handleCancel_fn","_contentChange","contentChange_fn","TimeCustomModalElement","_b","_c","event","TimeCustomModalElement$1"],"mappings":"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"}